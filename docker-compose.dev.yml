version: '3'

services:
  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  redpanda:
    image: redpandadata/redpanda:latest
    ports:
      - "9092:9092"
      - "19092:19092"
      - "9644:9644"  # admin HTTP 포트 외부 노출 (fixture health check용)
    environment:
      - REDPANDA_RPC_SERVER_LISTEN_ADDR=0.0.0.0
      - REDPANDA_SEED_SERVERS=redpanda:33145

  dag-manager:
    build:
      context: .
      dockerfile: src/qmtl/dag_manager/Dockerfile
    depends_on:
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
    volumes:
      - ./src:/app/src
      - ./protos:/app/protos
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: ["python", "-m", "src.qmtl.dag_manager.dag_manager"]

  gateway:
    build:
      context: .
      dockerfile: src/qmtl/gateway/Dockerfile
    depends_on:
      - dag-manager
    environment:
      - DAG_MANAGER_URI=http://dag-manager:8001
    volumes:
      - ./src:/app/src
      - ./protos:/app/protos
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: ["python", "-m", "src.qmtl.gateway.gateway"]

  sdk:
    build:
      context: .
      dockerfile: src/qmtl/sdk/Dockerfile
    depends_on:
      - gateway
    environment:
      - GATEWAY_URI=http://gateway:8002
    ports:
      - "8003:8003"

  orchestrator:
    build:
      context: .
      dockerfile: src/qmtl/orchestrator/Dockerfile
    depends_on:
      - registry
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
    volumes:
      - ./src:/app/src
      - ./protos:/app/protos
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  registry:
    build:
      context: .
      dockerfile: src/qmtl/registry/Dockerfile
    depends_on:
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
    volumes:
      - ./src:/app/src
      - ./protos:/app/protos
    ports:
      - "8002:8002"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  neo4j_data: